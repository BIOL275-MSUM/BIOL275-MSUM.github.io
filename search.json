[{"path":"index.html","id":"welcome","chapter":"Welcome","heading":"Welcome","text":"Welcome website Quantitative Biology BIOL 275 MSUM. site serves lab manual course.","code":""},{"path":"index.html","id":"acknowledgements","chapter":"Welcome","heading":"Acknowledgements","text":"website hosted GitHub Pages.","code":""},{"path":"lab-1.html","id":"lab-1","chapter":"1 Lab 1","heading":"1 Lab 1","text":"","code":""},{"path":"lab-2-introduction-to-data-visualization.html","id":"lab-2-introduction-to-data-visualization","chapter":"2 Lab 2: Introduction to data visualization","heading":"2 Lab 2: Introduction to data visualization","text":"","code":""},{"path":"lab-2-introduction-to-data-visualization.html","id":"objectives","chapter":"2 Lab 2: Introduction to data visualization","heading":"2.1 Objectives","text":"Learn :Create scatter plot using ggplot2 package:\nCreate ggplot\nSpecify aesthetic mappings\nAdd points\nSplit facets\nCreate scatter plot using ggplot2 package:Create ggplotSpecify aesthetic mappingsAdd pointsSplit facetsWork GitHub\nClaim repository GitHub classroom\nCreate RStudio Project using Version Control > GitHub option\nSet Git username password\nStage commit changes local Git repository\nView Project’s past commits\nWork GitHubClaim repository GitHub classroomCreate RStudio Project using Version Control > GitHub optionSet Git username passwordStage commit changes local Git repositoryView Project’s past commits","code":""},{"path":"lab-2-introduction-to-data-visualization.html","id":"assignment","chapter":"2 Lab 2: Introduction to data visualization","heading":"2.2 Assignment","text":"Familiarize version control reading Git GitHub.Familiarize version control reading Git GitHub.Introduce Git computer. Campus computers Git already installed . using computer, must first Install Git .Introduce Git computer. Campus computers Git already installed . using computer, must first Install Git .Go GitHub https://github.com/ Sign account.Go GitHub https://github.com/ Sign account.Claim GitHub repository Lab 2 following link posted D2L. sure new project open RStudio continuing. claiming repository, copy repository link (copy URL browser window).Claim GitHub repository Lab 2 following link posted D2L. sure new project open RStudio continuing. claiming repository, copy repository link (copy URL browser window).Create new RStudio project, time using Version Control option instead New Project option. Select GitHub, paste link repository asked. complete, RStudio lab 2 Project open, Git tab upper right present. , ask help.\ndialog window opens asking enter GitHub username password, :\nClick “Cancel” window\ncause another dialog window appear asking just GitHub Username. Enter press Enter.\ncause another dialog window appear asking GitHub password. enter . Instead, enter Personal Access Token (PAT):\nGo Personal Access Tokens page GitHub Settings: https://github.com/settings/tokens\nGenerate new token clicking button “Generate new token”\nPAT good computer use . move another computer later repeat process generate new token. token, enter Note describing computer type access granting. example: “CB 200 Computer 193827 repo access”.\nSet expiration date. recommend setting custom date near end semester.\nSelect scope checking “repo” box. means PAT grant full control repositories, want RStudio .\nScroll click green Generate token button.\nnext screen, copy token generated.\nGo back RStudio dialog window asking GitHub password. Paste PAT just copied password field press Enter.\n\nCreate new RStudio project, time using Version Control option instead New Project option. Select GitHub, paste link repository asked. complete, RStudio lab 2 Project open, Git tab upper right present. , ask help.dialog window opens asking enter GitHub username password, :Click “Cancel” windowClick “Cancel” windowThis cause another dialog window appear asking just GitHub Username. Enter press Enter.cause another dialog window appear asking just GitHub Username. Enter press Enter.cause another dialog window appear asking GitHub password. enter . Instead, enter Personal Access Token (PAT):\nGo Personal Access Tokens page GitHub Settings: https://github.com/settings/tokens\nGenerate new token clicking button “Generate new token”\nPAT good computer use . move another computer later repeat process generate new token. token, enter Note describing computer type access granting. example: “CB 200 Computer 193827 repo access”.\nSet expiration date. recommend setting custom date near end semester.\nSelect scope checking “repo” box. means PAT grant full control repositories, want RStudio .\nScroll click green Generate token button.\nnext screen, copy token generated.\nGo back RStudio dialog window asking GitHub password. Paste PAT just copied password field press Enter.\ncause another dialog window appear asking GitHub password. enter . Instead, enter Personal Access Token (PAT):Go Personal Access Tokens page GitHub Settings: https://github.com/settings/tokensGo Personal Access Tokens page GitHub Settings: https://github.com/settings/tokensGenerate new token clicking button “Generate new token”Generate new token clicking button “Generate new token”PAT good computer use . move another computer later repeat process generate new token. token, enter Note describing computer type access granting. example: “CB 200 Computer 193827 repo access”.PAT good computer use . move another computer later repeat process generate new token. token, enter Note describing computer type access granting. example: “CB 200 Computer 193827 repo access”.Set expiration date. recommend setting custom date near end semester.Set expiration date. recommend setting custom date near end semester.Select scope checking “repo” box. means PAT grant full control repositories, want RStudio .Select scope checking “repo” box. means PAT grant full control repositories, want RStudio .Scroll click green Generate token button.Scroll click green Generate token button.next screen, copy token generated.next screen, copy token generated.Go back RStudio dialog window asking GitHub password. Paste PAT just copied password field press Enter.Go back RStudio dialog window asking GitHub password. Paste PAT just copied password field press Enter.RStudio, install tidyverse palmerpenguins packages. may use Install button Packages tab RStudio, use install.packages() function, use code, console. include install code R script. previously installed package (e.g. previous lab), need install . Check Packages tab unsure whether either packages installed.RStudio, install tidyverse palmerpenguins packages. may use Install button Packages tab RStudio, use install.packages() function, use code, console. include install code R script. previously installed package (e.g. previous lab), need install . Check Packages tab unsure whether either packages installed.Create two new R scripts, one examples one assignment. Save names examples.R assignment.RCreate two new R scripts, one examples one assignment. Save names examples.R assignment.RFamiliarize R Data Science book Hadley Wickham Garrett Grolemund https://r4ds..co.nz/ skimming Welcome Chapters 1 2Familiarize R Data Science book Hadley Wickham Garrett Grolemund https://r4ds..co.nz/ skimming Welcome Chapters 1 2Read Chapter 3: Data visualization. read chapter, feel free copy code book examples.R script. script isn’t part assignment, may find useful code look , copy, modify, etc.Read Chapter 3: Data visualization. read chapter, feel free copy code book examples.R script. script isn’t part assignment, may find useful code look , copy, modify, etc.read chapter, accompanying assignment using penguins table palmerpenguins dataset. write (run) code necessary answer question. Precede code question comment question number; example:\n\n# question 9\ncode_for_question_9After read chapter, accompanying assignment using penguins table palmerpenguins dataset. write (run) code necessary answer question. Precede code question comment question number; example:reading section 3.1:\nAdd code R script load tidyverse package. ’re add , add another line code load palmerpenguins package.\nRun lines code. now , assume code write also run.\nreading section 3.1:Add code R script load tidyverse package. ’re add , add another line code load palmerpenguins package.Add code R script load tidyverse package. ’re add , add another line code load palmerpenguins package.Run lines code. now , assume code write also run.Run lines code. now , assume code write also run.Section 3.2:\nPrint penguins table console (write penguins script, run line). Look output remind variables (columns) . want, can open data data viewer using View(penguins). Answer following questions:\nmany rows penguins? __________________\nmany columns penguins? _______________\n\nRun ggplot2(data = penguins)\nsee? _____________________________________________________________________________\n\nCreate scatterplot compares penguin body mass flipper length.\npartner initial confirm correctly _________\n\nSection 3.2:Print penguins table console (write penguins script, run line). Look output remind variables (columns) . want, can open data data viewer using View(penguins). Answer following questions:\nmany rows penguins? __________________\nmany columns penguins? _______________\nPrint penguins table console (write penguins script, run line). Look output remind variables (columns) . want, can open data data viewer using View(penguins). Answer following questions:many rows penguins? __________________How many rows penguins? __________________How many columns penguins? _______________How many columns penguins? _______________Run ggplot2(data = penguins)\nsee? _____________________________________________________________________________\nRun ggplot2(data = penguins)see? _____________________________________________________________________________Create scatterplot compares penguin body mass flipper length.\npartner initial confirm correctly _________\nCreate scatterplot compares penguin body mass flipper length.partner initial confirm correctly _________After Section 3.3:\nCreate scatterplot, give species color  ___________\nCreate scatterplot, give species color island shape _________________\nSection 3.3:Create scatterplot, give species color  ___________Create scatterplot, give species color  ___________Create scatterplot, give species color island shape _________________Create scatterplot, give species color island shape _________________Read section 3.4, answer questions.Read section 3.4, answer questions.Read Section 3.5, :\nCopy code used previous question (aesthetic mappings color shape).\nCreate new scatterplot aesthetics, use facet_wrap() put species facet, one row graphs (nrow=1) ________\nCreate new scatterplot aesthetics, use facet_grid() put island species graph ________\nRead Section 3.5, :Copy code used previous question (aesthetic mappings color shape).Copy code used previous question (aesthetic mappings color shape).Create new scatterplot aesthetics, use facet_wrap() put species facet, one row graphs (nrow=1) ________Create new scatterplot aesthetics, use facet_wrap() put species facet, one row graphs (nrow=1) ________Create new scatterplot aesthetics, use facet_grid() put island species graph ________Create new scatterplot aesthetics, use facet_grid() put island species graph ________Clean assignment.R script pleasant read. command (series related commands) comment preceding , blank line .Clean assignment.R script pleasant read. command (series related commands) comment preceding , blank line .Save scripts.Save scripts.Commit changes scripts:\nGo Git tab RStudio (upper right pane)\nCheck box next file listed\nClick “Commit” button. Make window bigger can’t read button commit button.\ndialog, enter message commit message box. good commit describe changes made files committing usually written present tense. example, good commit message “Create project files add example assignment scripts”.\nClick “Commit” button\nCommit changes scripts:Go Git tab RStudio (upper right pane)Go Git tab RStudio (upper right pane)Check box next file listedCheck box next file listedClick “Commit” button. Make window bigger can’t read button commit button.Click “Commit” button. Make window bigger can’t read button commit button.dialog, enter message commit message box. good commit describe changes made files committing usually written present tense. example, good commit message “Create project files add example assignment scripts”.dialog, enter message commit message box. good commit describe changes made files committing usually written present tense. example, good commit message “Create project files add example assignment scripts”.Click “Commit” buttonClick “Commit” buttonPush commit GitHub:\nClick Push button (arrow) Git tab\nCheck repository GitHub see updated\nPush commit GitHub:Click Push button (arrow) Git tabClick Push button (arrow) Git tabCheck repository GitHub see updatedCheck repository GitHub see updated","code":"\n# question 9\ncode_for_question_9"},{"path":"lab-2-introduction-to-data-visualization.html","id":"submission","chapter":"2 Lab 2: Introduction to data visualization","heading":"2.3 Submission","text":"completed questions listed , save files, commit changes, push GitHub.copy URL GitHub repository submit Assignment D2L.","code":""},{"path":"lab-3-data-subsetting.html","id":"lab-3-data-subsetting","chapter":"3 Lab 3: Data subsetting","heading":"3 Lab 3: Data subsetting","text":"","code":""},{"path":"lab-3-data-subsetting.html","id":"objectives-1","chapter":"3 Lab 3: Data subsetting","heading":"3.1 Objectives","text":"lab, learn :Pick rows based valuesReorder rows based valuesPick columns based names","code":""},{"path":"lab-3-data-subsetting.html","id":"getting-started","chapter":"3 Lab 3: Data subsetting","heading":"3.2 Getting Started","text":"instructor created blank repository using GitHub Classroom.Go course D2L pageGo course D2L pageNavigate Lab 3 moduleNavigate Lab 3 moduleFollow link claim GitHub Classroom repository. claiming repository, copy URLFollow link claim GitHub Classroom repository. claiming repository, copy URLClone repository machine:\nRStudio, create New Project\nSelect Version Control option, GitHub\nPaste URL copied, press tab autocomplete directory name\nSelect parent directory place new project folder, probably either ~ ~/R.\nClick OK.\nClone repository machine:RStudio, create New ProjectIn RStudio, create New ProjectSelect Version Control option, GitHubSelect Version Control option, GitHubPaste URL copied, press tab autocomplete directory namePaste URL copied, press tab autocomplete directory nameSelect parent directory place new project folder, probably either ~ ~/R.Select parent directory place new project folder, probably either ~ ~/R.Click OK.Click OK.RStudio started, double-check Global Options described Lab 1. (don’t save .RData .Rhistory files, don’t auto-load startup)RStudio started, double-check Global Options described Lab 1. (don’t save .RData .Rhistory files, don’t auto-load startup)Make first commit:\nGit tab, check box next two files .gitignore *.Rproj stage adding repository.\nClick “Commit” button\nEnter commit message “Create new RStudio project”\nClick Commit submit commit\nClick Push push commit GitHub\nRStudio prompts credentials, follow method learned Lab 1 (use GitHub username Personal Access Token password)\n\nMake first commit:Git tab, check box next two files .gitignore *.Rproj stage adding repository.Git tab, check box next two files .gitignore *.Rproj stage adding repository.Click “Commit” buttonClick “Commit” buttonEnter commit message “Create new RStudio project”Enter commit message “Create new RStudio project”Click Commit submit commitClick Commit submit commitClick Push push commit GitHub\nRStudio prompts credentials, follow method learned Lab 1 (use GitHub username Personal Access Token password)\nClick Push push commit GitHubIf RStudio prompts credentials, follow method learned Lab 1 (use GitHub username Personal Access Token password)Create two new R scripts:\nOne use diamonds tutorial, can call diamonds-example.R\nOne use penguins assignment, can call penguins-assignment.R\nCreate two new R scripts:One use diamonds tutorial, can call diamonds-example.ROne use diamonds tutorial, can call diamonds-example.ROne use penguins assignment, can call penguins-assignment.ROne use penguins assignment, can call penguins-assignment.R","code":""},{"path":"lab-3-data-subsetting.html","id":"introduction","chapter":"3 Lab 3: Data subsetting","heading":"3.3 Introduction","text":"Working tabular data often requires manipulating contents table. example, may want remove certain columns make table easier read, remove rows match certain criteria graphing.can manipulate tables easily functions dplyr package, one core members tidyverse.Pick rows values using filter()Reorder rows using arrange()Pick columns name using select()","code":""},{"path":"lab-3-data-subsetting.html","id":"prerequisites","chapter":"3 Lab 3: Data subsetting","heading":"3.3.1 Prerequisites","text":"lab use functions dplyr package. load package , course encouraged always load entire tidyverse set packages.addition loading dplyr package , loading tidyverse package also lets access diamonds dataset ggplot2 package. lab use diamonds dataset show examples filtering, arranging, selecting.Copy code diamonds-example.R script run t load tidyverse package:","code":"\nlibrary(tidyverse)"},{"path":"lab-3-data-subsetting.html","id":"diamonds","chapter":"3 Lab 3: Data subsetting","heading":"3.3.2 diamonds","text":"explore basic dplyr functions using diamonds data frame, found ggplot package.data frame contains data almost 54,000 diamonds, including price attributes.First, take look diamonds printing console:Familiarize variables data frame looking help page diamonds:can also get going Help tab (bottom right RStudio) typing diamonds search field (Find Topic field).get message starting “documentation” search find diamonds data frame, may loaded ggplot2 package yet, either directly loading tidyverse package. Load try .important thing note variables data frame right now variable names classes (type data contain).Note printed diamonds console, first line output said tibble 53,940 rows 10 variables. second row named variables. third row gave data types: 6 numeric continuous variables labeled <dbl> , one numeric discrete variable labeled <int>, three categorical ordinal variables labeled <ord>.data type labels need explanation. data type represents particular kind data R. similar categorical/numerical distinction learn lecture, used R, specific purposes (e.g. Date POSIXt types).common column data see data frames :can read data types Column data types vignette tibble package.","code":"\n# print diamonds in the console\ndiamonds#> # A tibble: 53,940 × 10\n#>   carat cut       color clarity depth table price     x     y     z\n#>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n#> 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n#> 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n#> 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n#> 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n#> 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n#> # … with 53,934 more rows\nhelp(diamonds) # method 1\n??diamonds     # method 2"},{"path":"lab-3-data-subsetting.html","id":"filter-rows-with-filter","chapter":"3 Lab 3: Data subsetting","heading":"3.4 Filter rows with filter()","text":"filter() function allows take table pick rows keep based values. first argument name data frame. arguments expressions decide rows keep.example, take diamonds data frame pick diamonds weight 2 carats, write:","code":"\nfilter(diamonds, carat > 2)#> # A tibble: 1,889 × 10\n#>   carat cut     color clarity depth table price     x     y     z\n#>   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  2.06 Premium J     I1       61.2    58  5203  8.1   8.07  4.95\n#> 2  2.14 Fair    J     I1       69.4    57  5405  7.74  7.7   5.36\n#> 3  2.15 Fair    J     I1       65.5    57  5430  8.01  7.95  5.23\n#> 4  2.22 Fair    J     I1       66.7    56  5607  8.04  8.02  5.36\n#> 5  2.01 Fair    I     I1       67.4    58  5696  7.71  7.64  5.17\n#> 6  2.01 Fair    I     I1       55.9    64  5696  8.48  8.39  4.71\n#> # … with 1,883 more rows"},{"path":"lab-3-data-subsetting.html","id":"intermediate-objects","chapter":"3 Lab 3: Data subsetting","heading":"3.4.1 Intermediate objects","text":"run code filter data frame, R returns new data frame.want use new data frame operation, need save result assigning new name using assignment operator <-run line code, note output console. R generally produce output use assignment operator. want new object printed console, print running name new object:Now, want filter big_diamonds object , can use data object another filter() function:","code":"\nbig_diamonds <- filter(diamonds, carat > 2)\nbig_diamonds#> # A tibble: 1,889 × 10\n#>   carat cut     color clarity depth table price     x     y     z\n#>   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  2.06 Premium J     I1       61.2    58  5203  8.1   8.07  4.95\n#> 2  2.14 Fair    J     I1       69.4    57  5405  7.74  7.7   5.36\n#> 3  2.15 Fair    J     I1       65.5    57  5430  8.01  7.95  5.23\n#> 4  2.22 Fair    J     I1       66.7    56  5607  8.04  8.02  5.36\n#> 5  2.01 Fair    I     I1       67.4    58  5696  7.71  7.64  5.17\n#> 6  2.01 Fair    I     I1       55.9    64  5696  8.48  8.39  4.71\n#> # … with 1,883 more rows\nfilter(big_diamonds, price > 15000)#> # A tibble: 1,037 × 10\n#>   carat cut       color clarity depth table price     x     y     z\n#>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  2.1  Premium   I     SI1      61.5    57 15007  8.25  8.21  5.06\n#> 2  2.02 Premium   G     SI2      63      59 15014  8.05  7.95  5.03\n#> 3  2.05 Very Good F     SI2      61.9    56 15017  8.13  8.18  5.05\n#> 4  2.48 Fair      I     SI2      56.7    66 15030  8.88  8.64  4.99\n#> 5  2.8  Premium   I     SI2      61.1    59 15030  9.03  8.98  5.5 \n#> 6  2.19 Premium   I     SI2      60.8    60 15032  8.34  8.38  5.08\n#> # … with 1,031 more rows"},{"path":"lab-3-data-subsetting.html","id":"basic-operators","chapter":"3 Lab 3: Data subsetting","heading":"3.4.2 Basic Operators","text":"> symbol known “operator”. special characters use compare things R. basic operators include >, >=, <, <=, == (equals), != (equals).Note greater less operators can used numerical ordinal categorical variables, == != can used type variable.one major difference comparisons numeric (integer double) variables character, factor, ordered factor variables, use double quotes \".example using == operator cut variable, ordered factor data type:Note \"Ideal\" double quotes around . tell R want find literal text string “Ideal”. instead wrote cut == Ideal without quotes, R look object named Ideal environment , finding , return error.Another common errors starting try use = instead ==. , get helpful error message:","code":"\nfilter(diamonds, cut == \"Ideal\")#> # A tibble: 21,551 × 10\n#>   carat cut   color clarity depth table price     x     y     z\n#>   <dbl> <ord> <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  0.23 Ideal E     SI2      61.5    55   326  3.95  3.98  2.43\n#> 2  0.23 Ideal J     VS1      62.8    56   340  3.93  3.9   2.46\n#> 3  0.31 Ideal J     SI2      62.2    54   344  4.35  4.37  2.71\n#> 4  0.3  Ideal I     SI2      62      54   348  4.31  4.34  2.68\n#> 5  0.33 Ideal I     SI2      61.8    55   403  4.49  4.51  2.78\n#> 6  0.33 Ideal I     SI2      61.2    56   403  4.49  4.5   2.75\n#> # … with 21,545 more rows\nfilter(diamonds, carat = 2)#> Error: Problem with `filter()` input `..1`.\n#> ✖ Input `..1` is named.\n#> ℹ This usually means that you've used `=` instead of `==`.\n#> ℹ Did you mean `carat == 2`?"},{"path":"lab-3-data-subsetting.html","id":"logical-operators","chapter":"3 Lab 3: Data subsetting","heading":"3.4.3 Logical Operators","text":"computer language, expression meeting multiple criteria simultaneously called “” uses ampersand & operator. expression meeting either one criteria , , called “” denoted using vertical bar | operator. Finally, expression meeting criteria called “” denoted exclamation point ! operator.","code":""},{"path":"lab-3-data-subsetting.html","id":"and-operator","chapter":"3 Lab 3: Data subsetting","heading":"3.4.3.1 And operator","text":"put three arguments filter() function (data argument plus two criteria arguments), rows meeting criteria kept, performs “” operation. Thus two lines code return identical results:","code":"\nfilter(diamonds, carat > 2, price < 6000)\nfilter(diamonds, carat > 2 & price < 6000)"},{"path":"lab-3-data-subsetting.html","id":"or-operator","chapter":"3 Lab 3: Data subsetting","heading":"3.4.3.2 Or operator","text":"“” comparisons, use vertical bar | operator. example, code return table diamonds color D E.can get bit cumbersome multiple criteria, shortcut. can combine values want keep using c() function use “” operator %% like :","code":"\nfilter(diamonds, color == \"D\" | color == \"E\")#> # A tibble: 16,572 × 10\n#>   carat cut     color clarity depth table price     x     y     z\n#>   <dbl> <ord>   <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  0.23 Ideal   E     SI2      61.5    55   326  3.95  3.98  2.43\n#> 2  0.21 Premium E     SI1      59.8    61   326  3.89  3.84  2.31\n#> 3  0.23 Good    E     VS1      56.9    65   327  4.05  4.07  2.31\n#> 4  0.22 Fair    E     VS2      65.1    61   337  3.87  3.78  2.49\n#> 5  0.2  Premium E     SI2      60.2    62   345  3.79  3.75  2.27\n#> 6  0.32 Premium E     I1       60.9    58   345  4.38  4.42  2.68\n#> # … with 16,566 more rows\nfilter(diamonds, color %in% c(\"D\", \"E\"))"},{"path":"lab-3-data-subsetting.html","id":"not-operator","chapter":"3 Lab 3: Data subsetting","heading":"3.4.3.3 Not operator","text":"“” comparisons can used pick rows meet given criteria. ! operator generally followed parentheses () affirmative criteria inside . example, code return table diamonds color except E:","code":"\nfilter(diamonds, !(color == \"E\"))"},{"path":"lab-3-data-subsetting.html","id":"missing-values","chapter":"3 Lab 3: Data subsetting","heading":"3.4.3.4 Missing values","text":"Missing values story later date! don’t need know yet, find looking answer, can filter values without “missing value” color like :diamonds dataset contain missing values, results uninteresting, least now know .","code":"\nfilter(diamonds, !is.na(color))"},{"path":"lab-3-data-subsetting.html","id":"string-helper-functions","chapter":"3 Lab 3: Data subsetting","heading":"3.4.4 String helper functions","text":"variety functions can incorporate filter() function achieve specific results.example, dealing text column (e.g. character, factor, ordered), may wish filter based something precise simply == !=. Let’s say want find diamonds clarity VS1, VS2, VVS1, VVS2. use “” operator, “” operator. don’t even know possible clarity values just want everything contains \"VS\" anywhere word. string-based helper function str_detect() looks particular string text inside text variable:function comparison, operator like == !=.name variable want look goes inside str_detect() function first argument, text want detect second argument, surrounded double quotes.want pick values clarity start end particular text, can use functions str_starts() str_ends(). example:","code":"\nfilter(diamonds, str_detect(clarity, \"VS\"))#> # A tibble: 29,150 × 10\n#>   carat cut       color clarity depth table price     x     y     z\n#>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n#> 2  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n#> 3  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n#> 4  0.24 Very Good I     VVS1     62.3    57   336  3.95  3.98  2.47\n#> 5  0.22 Fair      E     VS2      65.1    61   337  3.87  3.78  2.49\n#> 6  0.23 Very Good H     VS1      59.4    61   338  4     4.05  2.39\n#> # … with 29,144 more rows\nfilter(diamonds, str_starts(clarity, \"VS\"))\nfilter(diamonds, str_ends(clarity, \"2\"))"},{"path":"lab-3-data-subsetting.html","id":"arrange-rows-with-arrange","chapter":"3 Lab 3: Data subsetting","heading":"3.5 Arrange rows with arrange()","text":"arrange() function allow sort rows data frame based values one columns. always returns data frame number rows input data frame.first argument data frame sort. Subsequent arguments names columns sort.example, sort diamonds data frame cut:can see even within Fair cut diamonds, still considerable variation price. want sort within cut, can add additional arguments:sort character (text) variable, sort alphabetically. sort factor ordered variable, sort based order factors levels, can see using levels() . example levels(diamonds$cut) .","code":"\narrange(diamonds, cut)#> # A tibble: 53,940 × 10\n#>   carat cut   color clarity depth table price     x     y     z\n#>   <dbl> <ord> <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  0.22 Fair  E     VS2      65.1    61   337  3.87  3.78  2.49\n#> 2  0.86 Fair  E     SI2      55.1    69  2757  6.45  6.33  3.52\n#> 3  0.96 Fair  F     SI2      66.3    62  2759  6.27  5.95  4.07\n#> 4  0.7  Fair  F     VS2      64.5    57  2762  5.57  5.53  3.58\n#> 5  0.7  Fair  F     VS2      65.3    55  2762  5.63  5.58  3.66\n#> 6  0.91 Fair  H     SI2      64.4    57  2763  6.11  6.09  3.93\n#> # … with 53,934 more rows\narrange(diamonds, cut, price)#> # A tibble: 53,940 × 10\n#>   carat cut   color clarity depth table price     x     y     z\n#>   <dbl> <ord> <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  0.22 Fair  E     VS2      65.1    61   337  3.87  3.78  2.49\n#> 2  0.25 Fair  E     VS1      55.2    64   361  4.21  4.23  2.33\n#> 3  0.23 Fair  G     VVS2     61.4    66   369  3.87  3.91  2.39\n#> 4  0.27 Fair  E     VS1      66.4    58   371  3.99  4.02  2.66\n#> 5  0.3  Fair  J     VS2      64.8    58   416  4.24  4.16  2.72\n#> 6  0.3  Fair  F     SI1      63.1    58   496  4.3   4.22  2.69\n#> # … with 53,934 more rows"},{"path":"lab-3-data-subsetting.html","id":"descending-order","chapter":"3 Lab 3: Data subsetting","heading":"3.5.1 Descending order","text":"sort variable descending rather ascending order, can wrap variable name desc() function. example, sort worst cut diamonds top data frame, within highest priced diamonds top, use:Fair cut diamonds cost much? Probably huge! first 6 diamonds list least 2 carats weight.","code":"\narrange(diamonds, cut, desc(price))#> # A tibble: 53,940 × 10\n#>   carat cut   color clarity depth table price     x     y     z\n#>   <dbl> <ord> <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  2.01 Fair  G     SI1      70.6    64 18574  7.43  6.64  4.69\n#> 2  2.02 Fair  H     VS2      64.5    57 18565  8     7.95  5.14\n#> 3  4.5  Fair  J     I1       65.8    58 18531 10.2  10.2   6.72\n#> 4  2    Fair  G     VS2      67.6    58 18515  7.65  7.61  5.16\n#> 5  2.51 Fair  H     SI2      64.7    57 18308  8.44  8.5   5.48\n#> 6  3.01 Fair  I     SI2      65.8    56 18242  8.99  8.94  5.9 \n#> # … with 53,934 more rows"},{"path":"lab-3-data-subsetting.html","id":"select-columns-with-select","chapter":"3 Lab 3: Data subsetting","heading":"3.6 Select columns with select()","text":"select() function allows select columns (.e. variables) keep, conversely ones remove. function returns new data frame number rows input data frame, fewer columns specified arguments.first argument name data frame. subsequent arguments names variables want keep.example, say wanted focus variables carat, cut, color, use:Technically, can also select variables position, select(diamonds, carat, cut, color) equivalent select(diamonds, 1, 2, 3)select() can also used rearrange order columns:also shorthand selecting many variables appear consecutively data frame using colon : operator. example, select every variable carat price (include carat, cut, color, clarity, depth, table, price), :","code":"\nselect(diamonds, carat, cut, color)#> # A tibble: 53,940 × 3\n#>   carat cut       color\n#>   <dbl> <ord>     <ord>\n#> 1  0.23 Ideal     E    \n#> 2  0.21 Premium   E    \n#> 3  0.23 Good      E    \n#> 4  0.29 Premium   I    \n#> 5  0.31 Good      J    \n#> 6  0.24 Very Good J    \n#> # … with 53,934 more rows\nselect(diamonds, color, cut, carat)#> # A tibble: 53,940 × 3\n#>   color cut       carat\n#>   <ord> <ord>     <dbl>\n#> 1 E     Ideal      0.23\n#> 2 E     Premium    0.21\n#> 3 E     Good       0.23\n#> 4 I     Premium    0.29\n#> 5 J     Good       0.31\n#> 6 J     Very Good  0.24\n#> # … with 53,934 more rows\nselect(diamonds, carat:price)#> # A tibble: 53,940 × 7\n#>   carat cut       color clarity depth table price\n#>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int>\n#> 1  0.23 Ideal     E     SI2      61.5    55   326\n#> 2  0.21 Premium   E     SI1      59.8    61   326\n#> 3  0.23 Good      E     VS1      56.9    65   327\n#> 4  0.29 Premium   I     VS2      62.4    58   334\n#> 5  0.31 Good      J     SI2      63.3    58   335\n#> 6  0.24 Very Good J     VVS2     62.8    57   336\n#> # … with 53,934 more rows"},{"path":"lab-3-data-subsetting.html","id":"removing-variables","chapter":"3 Lab 3: Data subsetting","heading":"3.6.1 Removing variables","text":"Sometimes easier say variables don’t want keep rather ones . scenarios can put hyphen (negative symbol) directly variable name. resulting data frame variables except one named. example, return every row except table, :remove several variables, can prepend one -. can even remove range values, syntax quirky. put - variable name. example, remove x, y, z variables:","code":"\nselect(diamonds, -table)#> # A tibble: 53,940 × 9\n#>   carat cut       color clarity depth price     x     y     z\n#>   <dbl> <ord>     <ord> <ord>   <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  0.23 Ideal     E     SI2      61.5   326  3.95  3.98  2.43\n#> 2  0.21 Premium   E     SI1      59.8   326  3.89  3.84  2.31\n#> 3  0.23 Good      E     VS1      56.9   327  4.05  4.07  2.31\n#> 4  0.29 Premium   I     VS2      62.4   334  4.2   4.23  2.63\n#> 5  0.31 Good      J     SI2      63.3   335  4.34  4.35  2.75\n#> 6  0.24 Very Good J     VVS2     62.8   336  3.94  3.96  2.48\n#> # … with 53,934 more rows\nselect(diamonds, -x:-y)"},{"path":"lab-3-data-subsetting.html","id":"helper-functions","chapter":"3 Lab 3: Data subsetting","heading":"3.6.2 Helper functions","text":"Sometime work massive data frame contains dozens even hundreds variables. cases can cumbersome name every variable add remove.several functions can used within select() :starts_with(\"abc\") finds columns whose name starts “abc”starts_with(\"abc\") finds columns whose name starts “abc”ends_with(\"abc\") finds columns whose name ends “abc”ends_with(\"abc\") finds columns whose name ends “abc”contains(\"abc\") finds columns whose name contains “abc”contains(\"abc\") finds columns whose name contains “abc”everything() finds columns already explicitly added dropped. useful variables want move front (left) data frame.everything() finds columns already explicitly added dropped. useful variables want move front (left) data frame.example, following code move table price front leave everything else end:","code":"\nselect(diamonds, ends_with(\"e\"), everything())#> # A tibble: 53,940 × 10\n#>   table price carat cut       color clarity depth     x     y     z\n#>   <dbl> <int> <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <dbl> <dbl>\n#> 1    55   326  0.23 Ideal     E     SI2      61.5  3.95  3.98  2.43\n#> 2    61   326  0.21 Premium   E     SI1      59.8  3.89  3.84  2.31\n#> 3    65   327  0.23 Good      E     VS1      56.9  4.05  4.07  2.31\n#> 4    58   334  0.29 Premium   I     VS2      62.4  4.2   4.23  2.63\n#> 5    58   335  0.31 Good      J     SI2      63.3  4.34  4.35  2.75\n#> 6    57   336  0.24 Very Good J     VVS2     62.8  3.94  3.96  2.48\n#> # … with 53,934 more rows"},{"path":"lab-3-data-subsetting.html","id":"combine-multiple-operations-with-the-pipe","chapter":"3 Lab 3: Data subsetting","heading":"3.7 Combine multiple operations with the pipe","text":"point, learned perform one action time, either filtering, arranging, selecting. want perform multiple steps row? example, let’s say want perform following actions diamonds dataset:Pick diamonds weight 2 caratsPick diamonds weight 2 caratsSort diamonds priceSort diamonds priceSelect variables variables carat, cut, priceSelect variables variables carat, cut, priceOne solution step one time, creating intermediate objects along way:Another option nest function inside :works, hard read interpret.elegant solution use special pipe operator %>% introduced magrittr package included tidyverse:pipe operator takes left pipe uses first argument function right pipe. ’s like saying “take thing, , ”Pipes can make code much simpler, shorter, easier read.can get better overview using pipes, examples, Pipes chapter R Data Science.","code":"\nbig_diamonds <- filter(diamonds, carat >= 2)\nsorted_big_diamonds <- arrange(big_diamonds, price)\nselect(sorted_big_diamonds, carat, cut, price)\nselect(arrange(filter(diamonds, carat >= 2), price), carat, cut, price)\ndiamonds %>% \n  filter(carat >= 2) %>% \n  arrange(price) %>% \n  select(carat, cut, price)"},{"path":"lab-3-data-subsetting.html","id":"assignment-1","chapter":"3 Lab 3: Data subsetting","heading":"3.8 Assignment","text":"Open penguins-assignment.R script clicking name Files tab (already open click tab source pane.assignment work Palmer Penguins dataset used previous lab.Check see palmerpenguins package already installed selecting Packages tab bottom right pane. search field, type palmer see package installed. , click Install button type palmerpenguins install .Begin loading tidyverse palmerpenguins package R script:","code":"\nlibrary(tidyverse)\nlibrary(palmerpenguins)"},{"path":"lab-3-data-subsetting.html","id":"questions","chapter":"3 Lab 3: Data subsetting","heading":"3.8.1 Questions","text":"Now use know previous labs, learned today’s lab, perform following data manipulation tasks.Put comment like # question 1 line code chunk, () can read script easily.Print penguins datasetFilter penguins include Gentoo penguinsFilter penguins include everything except Gentoo penguinsFilter penguins include penguins Bisco Island.Filter penguins include Adelie Penguins Biscoe Island.Filter penguins include Chinstrap penguins bill lengths greater equal 50 mm.Filter penguins include Chinstrap penguins bill lengths greater equal 50 mm flipper lengths less 196 mm.Filter penguins include observations missing value (NA) bill lengthArrange penguins body massArrange penguins decreasing flipper lengthSelect columns species sexSelect column species columns begin “bill_” using starts_with() helper functionSelect columns except ending “_mm”Extra credit: Use pipes select female Adelie penguins bill depth least 18 mm, arrange results decreasing bill depth, select columns year flipper_length_mm, order.","code":""},{"path":"lab-3-data-subsetting.html","id":"submission-1","chapter":"3 Lab 3: Data subsetting","heading":"3.9 Submission","text":"completed questions listed , save files, commit changes, push GitHub.copy URL GitHub repository submit Assignment D2L.","code":""},{"path":"lab-3-data-subsetting.html","id":"further-reading","chapter":"3 Lab 3: Data subsetting","heading":"3.10 Further reading","text":"lab manual, R Data Science (R4DS), contains detailed instructions filtering, arranging, selecting Chapter 5: Data transformation.need read chapter, certainly help solidify concepts introduced lab.want read chapter try examples R Script don’t forget install nycflights13 package described R4DS Section 1.4.4 Packages.","code":""},{"path":"lab-4-data-summarizing.html","id":"lab-4-data-summarizing","chapter":"4 Lab 4: Data summarizing","heading":"4 Lab 4: Data summarizing","text":"","code":""},{"path":"lab-4-data-summarizing.html","id":"objectives-2","chapter":"4 Lab 4: Data summarizing","heading":"4.1 Objectives","text":"lab, learn :Rename variablesRename variablesCreate new variablesCreate new variablesSummarize dataset whole groupsSummarize dataset whole groupsVisualize relationship variables\nOne numerical one categorical variable\nTwo numerical variables\nThree variables\nVisualize relationship variablesOne numerical one categorical variableTwo numerical variablesThree variables","code":""},{"path":"lab-4-data-summarizing.html","id":"introduction-1","chapter":"4 Lab 4: Data summarizing","heading":"4.2 Introduction","text":"Visualizing data key step data science workflow, rarely first step. Sometimes need part dataset answer question, previous lab, Data subsetting, introduced methods extracting subset observations variables table. times, may need create new variables original ones, may need calculate summary statistic dataset groups within dataset. lab introduce methods using diamonds dataset ggplot2 package new functions dplyr package.lab :Rename variables rename()Create new variables mutate mutate()Summarize dataset group_by() summarize()","code":""},{"path":"lab-4-data-summarizing.html","id":"packages","chapter":"4 Lab 4: Data summarizing","heading":"4.2.1 Packages","text":"lab use functions datasets dplyr ggplot2 packages. load packages individually, course encouraged always load entire tidyverse set packages.Load tidyverse package:","code":"\nlibrary(tidyverse)    # load the tidyverse package"},{"path":"lab-4-data-summarizing.html","id":"diamonds-data","chapter":"4 Lab 4: Data summarizing","heading":"4.2.2 diamonds data","text":"addition getting us access dplyr packages, loading tidyverse package also lets us access diamonds dataset ggplot2 package. lab use diamonds dataset show examples renaming, mutating, summarizing, graphing.can read diamonds dataset previous lab, Data subsetting.","code":""},{"path":"lab-4-data-summarizing.html","id":"rename-variables-with-rename","chapter":"4 Lab 4: Data summarizing","heading":"4.3 Rename variables with rename()","text":"rename() function allows rename variables data frame. first argument rename() data frame. arguments specify variables rename, format new_name = old_name.example, say want rename x, y, z variables length, width, height:Note lack quotes around names data frame, new variable names old variables namesThe arguments function, harder read. line code gets long, hard read, try putting argument line like :makes code readable. Just sure commas argument except last, don’t forget closing parenthesis line","code":"\nrename(diamonds, length = x, width = y, height = z)#> # A tibble: 53,940 × 10\n#>   carat cut       color clarity depth table price length width height\n#>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int>  <dbl> <dbl>  <dbl>\n#> 1  0.23 Ideal     E     SI2      61.5    55   326   3.95  3.98   2.43\n#> 2  0.21 Premium   E     SI1      59.8    61   326   3.89  3.84   2.31\n#> 3  0.23 Good      E     VS1      56.9    65   327   4.05  4.07   2.31\n#> 4  0.29 Premium   I     VS2      62.4    58   334   4.2   4.23   2.63\n#> 5  0.31 Good      J     SI2      63.3    58   335   4.34  4.35   2.75\n#> 6  0.24 Very Good J     VVS2     62.8    57   336   3.94  3.96   2.48\n#> # … with 53,934 more rows\nrename(\n  diamonds, \n  length = x, \n  width = y, \n  height = z\n)"},{"path":"lab-4-data-summarizing.html","id":"create-new-variables-with-mutate","chapter":"4 Lab 4: Data summarizing","heading":"4.4 Create new variables with mutate()","text":"mutate() function allows create new variable data frame. dplyr functions, first argument mutate() data frame. Additional arguments name-value pairs. name gives name column output. value often mathematical expression (case numerical variables), function, combination .Let’s example using diamonds dataset. make viewing new variables easier, first select subset variables diamonds data set using select() give new data frame name d2:Now use new data frame d2 calculate price per carat diamond. can call new variable anything want. example, named ppc (“price per carat”):","code":"\n# select the variables of interest\nd2 <- select(diamonds, carat, price)\nd2#> # A tibble: 53,940 × 2\n#>   carat price\n#>   <dbl> <int>\n#> 1  0.23   326\n#> 2  0.21   326\n#> 3  0.23   327\n#> 4  0.29   334\n#> 5  0.31   335\n#> 6  0.24   336\n#> # … with 53,934 more rows\n# example of creating price per carat (ppc)\nmutate(d2, ppc = price / carat)#> # A tibble: 53,940 × 3\n#>   carat price   ppc\n#>   <dbl> <int> <dbl>\n#> 1  0.23   326 1417.\n#> 2  0.21   326 1552.\n#> 3  0.23   327 1422.\n#> 4  0.29   334 1152.\n#> 5  0.31   335 1081.\n#> 6  0.24   336 1400 \n#> # … with 53,934 more rows"},{"path":"lab-4-data-summarizing.html","id":"mutate-an-existing-variable","chapter":"4 Lab 4: Data summarizing","heading":"4.4.1 mutate() an existing variable","text":"create entirely new variable using mutate(). example, let’s say wanted convert price US Dollars (USD) Canadian Dollars (CAD). current exchange rate 1 USD 1.27 CAD. can overwrite existing price variable setting new variable name old variable name:","code":"\nmutate(diamonds, price = price * 1.27)#> # A tibble: 53,940 × 10\n#>   carat cut       color clarity depth table price     x     y     z\n#>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <dbl> <dbl> <dbl> <dbl>\n#> 1  0.23 Ideal     E     SI2      61.5    55  414.  3.95  3.98  2.43\n#> 2  0.21 Premium   E     SI1      59.8    61  414.  3.89  3.84  2.31\n#> 3  0.23 Good      E     VS1      56.9    65  415.  4.05  4.07  2.31\n#> 4  0.29 Premium   I     VS2      62.4    58  424.  4.2   4.23  2.63\n#> 5  0.31 Good      J     SI2      63.3    58  425.  4.34  4.35  2.75\n#> 6  0.24 Very Good J     VVS2     62.8    57  427.  3.94  3.96  2.48\n#> # … with 53,934 more rows"},{"path":"lab-4-data-summarizing.html","id":"summarize-a-data-set-with-summarize","chapter":"4 Lab 4: Data summarizing","heading":"4.5 Summarize a data set with summarize()","text":"can summarize data set using summarize() function. Like dplyr functions, first argument summarize() data frame. Additional arguments name-value pairs, just like mutate(). Values set using various summary functions mean() sd() (standard deviation). difference whereas mutate() returns data frame number rows input data frame, summarize() returns data frame one row, variables new data frame ones named summarize(). example, calculate mean value carat variable, code look like :can calculate multiple summary statistics time providing comma-separated list name-value pairs. line starts getting long, example argument line, work just fine everything line.","code":"\nsummarize(diamonds, mean_carat = mean(carat))#> # A tibble: 1 × 1\n#>   mean_carat\n#>        <dbl>\n#> 1      0.798\nsummarize(\n  diamonds,\n  mean_carat = mean(carat), \n  sd_carat = sd(carat)\n)"},{"path":"lab-4-data-summarizing.html","id":"summary-functions","chapter":"4 Lab 4: Data summarizing","heading":"4.5.1 Summary functions","text":"wide variety functions can use summarize variable. examples:max() - maximum valuemin() - minimum valuemedian() - median valuemode() modesd() standard deviationvar() varianceIQR() interquartile rangeFor functions, must put name variable want summarize inside given function first argument.","code":""},{"path":"lab-4-data-summarizing.html","id":"sample-size","chapter":"4 Lab 4: Data summarizing","heading":"4.5.1.1 Sample size","text":"also special summary function n() returns number rows, .e. sample size. example:","code":"\nsummarize(diamonds, sampl_size = n())#> # A tibble: 1 × 1\n#>   sampl_size\n#>        <int>\n#> 1      53940"},{"path":"lab-4-data-summarizing.html","id":"quantiles","chapter":"4 Lab 4: Data summarizing","heading":"4.5.1.2 Quantiles","text":"summary functions require one arguments addition name variable summarize.One example quantile() function, whose probs argument probability want calculate quantile . example, calculate first quartile (0.25 quantile) variable carat, can use quantile function argument probs = 0.25:","code":"\nsummarize(diamonds, q1 = quantile(carat, probs = 0.25))#> # A tibble: 1 × 1\n#>      q1\n#>   <dbl>\n#> 1   0.4"},{"path":"lab-4-data-summarizing.html","id":"combine-functions-and-equations","chapter":"4 Lab 4: Data summarizing","heading":"4.5.2 Combine functions and equations","text":"summarizing, can use functions mathematical operators creating new variable. example, code calculates standard error mean price variable. Remember standard error equal standard deviation divided square root sample size:Notice equation standard error (sem) uses sd() function n() function.Alternative, summarize mean sample size first use new variables creating third variable. example calculate mean sample size first, use calculate standard error, use calculate approximate 95% confidence interval:","code":"\nsummarize(\n  diamonds, \n  sem = sd(price) / sqrt(n())\n)#> # A tibble: 1 × 1\n#>     sem\n#>   <dbl>\n#> 1  17.2\nsummarize(\n  diamonds, \n  mean_p = mean(price),\n  sd_p = sd(price),\n  sampl_size = n(),\n  sem = sd_p / sqrt(sampl_size),\n  ci_upper_limit = mean_p + 1.96 * sem,\n  ci_lower_limit = mean_p - 1.96 * sem\n)#> # A tibble: 1 × 6\n#>   mean_p  sd_p sampl_size   sem ci_upper_limit ci_lower_limit\n#>    <dbl> <dbl>      <int> <dbl>          <dbl>          <dbl>\n#> 1  3933. 3989.      53940  17.2          3966.          3899."},{"path":"lab-4-data-summarizing.html","id":"summarize-a-data-set-by-groups","chapter":"4 Lab 4: Data summarizing","heading":"4.6 Summarize a data set by groups","text":"previous section learned use summarize() combined summary functions mean() sd() calculate statistics observations (rows) data set.common goal data transformation, however, calculate statistics groups observations rather observations together. example, university course two sections, may want calculate mean scores section instead class whole.group_by() function combined summarize() function lets calculated summary statistics groups observations. groups identified categorical variable called grouping variable, statistics calculated one variables.example, let’s explore mean price varies cut diamond diamonds data set.first step, use group_by() produced grouped data frame. Like dplyr verbs, first argument group_by() name dataset. Additional arguments identify variables want group . example, group diamonds dataset cut variable assign resulting grouped data frame new name, diamonds_grouped:difference output printing ungrouped diamonds table second line output, now says # Groups:   cut [5]. ’s saying table grouped cut variable five groups (five possible values cut).next step summarize grouped data frame, just like summarized ungrouped data frame previous section:","code":"\ndiamonds_grouped <- group_by(diamonds, cut)\ndiamonds_grouped#> # A tibble: 53,940 × 10\n#> # Groups:   cut [5]\n#>   carat cut       color clarity depth table price     x     y     z\n#>   <dbl> <ord>     <ord> <ord>   <dbl> <dbl> <int> <dbl> <dbl> <dbl>\n#> 1  0.23 Ideal     E     SI2      61.5    55   326  3.95  3.98  2.43\n#> 2  0.21 Premium   E     SI1      59.8    61   326  3.89  3.84  2.31\n#> 3  0.23 Good      E     VS1      56.9    65   327  4.05  4.07  2.31\n#> 4  0.29 Premium   I     VS2      62.4    58   334  4.2   4.23  2.63\n#> 5  0.31 Good      J     SI2      63.3    58   335  4.34  4.35  2.75\n#> 6  0.24 Very Good J     VVS2     62.8    57   336  3.94  3.96  2.48\n#> # … with 53,934 more rows\nsummarize(diamonds_grouped, mean_price = mean(price))#> # A tibble: 5 × 2\n#>   cut       mean_price\n#>   <ord>          <dbl>\n#> 1 Fair           4359.\n#> 2 Good           3929.\n#> 3 Very Good      3982.\n#> 4 Premium        4584.\n#> 5 Ideal          3458."},{"path":"lab-4-data-summarizing.html","id":"quick-contingency-tables","chapter":"4 Lab 4: Data summarizing","heading":"4.7 Quick contingency tables","text":"Counting number observations group fairly common task, especially exploring data interactively R session (e.g. typing commands console). One way use grouped summary n() function described , example:common task, dplyr includes special function count() just fewer commands:can also create quick contingency table multiple variables:just want see distinct values (levels) categorical variable, combinations values two categorical variables dataset, don’t need counts, even simpler function distinct() :functions count() distinct() useful want get quick handle categorical variables.","code":"\ndiamonds %>% \n  group_by(cut) %>% \n  summarize(n = n())#> # A tibble: 5 × 2\n#>   cut           n\n#>   <ord>     <int>\n#> 1 Fair       1610\n#> 2 Good       4906\n#> 3 Very Good 12082\n#> 4 Premium   13791\n#> 5 Ideal     21551\ncount(diamonds, cut)#> # A tibble: 5 × 2\n#>   cut           n\n#>   <ord>     <int>\n#> 1 Fair       1610\n#> 2 Good       4906\n#> 3 Very Good 12082\n#> 4 Premium   13791\n#> 5 Ideal     21551\ndistinct(diamonds, cut, clarity)#> # A tibble: 40 × 2\n#>   cut       clarity\n#>   <ord>     <ord>  \n#> 1 Ideal     SI2    \n#> 2 Premium   SI1    \n#> 3 Good      VS1    \n#> 4 Premium   VS2    \n#> 5 Good      SI2    \n#> 6 Very Good VVS2   \n#> # … with 34 more rows\ndistinct(diamonds, cut)#> # A tibble: 5 × 1\n#>   cut      \n#>   <ord>    \n#> 1 Ideal    \n#> 2 Premium  \n#> 3 Good     \n#> 4 Very Good\n#> 5 Fair"},{"path":"lab-4-data-summarizing.html","id":"visualize-a-categorical-and-numerical-variable","chapter":"4 Lab 4: Data summarizing","heading":"4.8 Visualize a categorical and numerical variable","text":"Introduction ggplot2 lab, learned create histogram visualize distribution single numerical variable. want look two variables related? example, say want visualize relationship cut price diamonds summarized previous example.learn two ways visualize joint distribution numerical variable categorical variable:Multiple histogramsStrip plots","code":""},{"path":"lab-4-data-summarizing.html","id":"multiple-histograms","chapter":"4 Lab 4: Data summarizing","heading":"4.8.1 Multiple histograms","text":"common way comparing multiple distributions create single graph multiple histograms, one variable subset observations.facet_wrap() function ggplot2 allows take plot split multiple plots based categorical variable. first argument facet_wrap() expression form ~ var_name var_name name grouping variable.First, let’s start graphing distribution price variable without regard cut. set number bin width 500 (dollars)Interestingly, distribution appears bimodal, second, smaller mode around 4500.Now lets plot graph add facet_wrap() function. Remember add plus sign + end geom_histogram() R knows trying add another layer graph:resulting plot now five small graphs, called facets tidyverse lingo, labeled value cut represents.common issue faceting facets x y axis limits. example, graph , y axis ranges 0 5500, highest count Fair cut diamonds less 200 far fewer diamonds sold. goal show distribution prices rather relative sample size cut, makes sense let y axis scale vary based data. can accomplish scales argument facet_wrap():scales argument can set \"free_y\", \"free_x\", \"free\" allow axes vary.useful arguments facet_wrap() include nrow ncol, one can used specify many rows columns resulting facets form. histograms, ’s common put one column can compare shape distributions easily.","code":"\nggplot(data = diamonds) +\n  geom_histogram(mapping = aes(x = price), binwidth = 500)\nggplot(data = diamonds) +\n  geom_histogram(mapping = aes(x = price), binwidth = 500) +\n  facet_wrap(~ cut)\nggplot(data = diamonds) +\n  geom_histogram(mapping = aes(x = price), binwidth = 500) +\n  facet_wrap(~ cut, scales = \"free_y\")"},{"path":"lab-4-data-summarizing.html","id":"strip-plots","chapter":"4 Lab 4: Data summarizing","heading":"4.8.2 Strip plots","text":"Strip charts another common way visualize relationship numerical variable categorical variable. kind plot, use geom_jitter() function. Unlike histogram, creates y axis counting number rows, strip chart requires specify x y axes aesthetic mapping. often categorical variable explanatory variable placed x axis:can see, quite bit overplotting. makes difficult estimate density points part graph. overplotting minor, one solution use hollow circles instead filled ones altering shape argument geom_jitter(). severe overplotting like , better strategy make points semi-transparent setting alpha argument something low like 0.1 indicating 10% opacity.One nice thing strip plots make easy view raw data summary statistics means confidence intervals.trick adding summary statistics ggplot based raw data first create new data frame containing summary statistics. remember, summarized price cut like :Let’s expand bit include upper lower confidence limits:Now summary statistics, add means graph using geom_crossbar() function. crossbars based summary data, raw data, need specify new data argument aesthetic mappings. required aesthetics geom_crossbar() y, ymin, ymax. Setting color red make crossbars stand black raw data points.boxes showing 95% confidence intervals show well sample sizes large. better idea look like, examples types errors bars, see Vertical intervals: lines, crossbars & errorbars Reference page ggplot2 website.","code":"\nggplot(data = diamonds) +\n  geom_jitter(mapping = aes(x = cut, y = price))\nggplot(data = diamonds) +\n  geom_jitter(mapping = aes(x = cut, y = price), alpha = .1)\nsummarize(diamonds_grouped, mean_price = mean(price))\nprice_summary <-\n  summarize(\n    diamonds_grouped, \n    mean_price = mean(price),\n    sem = sd(price) / sqrt(n()),\n    ci_upper_limit = mean_price + 1.96 * sem,\n    ci_lower_limit = mean_price - 1.96 * sem\n  )\nprice_summary#> # A tibble: 5 × 5\n#>   cut       mean_price   sem ci_upper_limit ci_lower_limit\n#>   <ord>          <dbl> <dbl>          <dbl>          <dbl>\n#> 1 Fair           4359.  88.7          4533.          4185.\n#> 2 Good           3929.  52.6          4032.          3826.\n#> 3 Very Good      3982.  35.8          4052.          3912.\n#> 4 Premium        4584.  37.0          4657.          4512.\n#> 5 Ideal          3458.  25.9          3508.          3407.\nggplot(data = diamonds) +\n  geom_jitter(mapping = aes(x = cut, y = price), alpha = .1) +\n  geom_crossbar(\n    data = price_summary, \n    mapping = aes(x = cut, y = mean_price, ymax = ci_upper_limit, \n                  ymin = ci_lower_limit),\n    color = \"red\"\n  )"},{"path":"lab-4-data-summarizing.html","id":"visualize-two-numerical-variables","chapter":"4 Lab 4: Data summarizing","heading":"4.9 Visualize two numerical variables","text":"basic type graph visualizing relationship two numerical variables scatterplot. geom_point() function can used add points two graph. used numerical variables x y aesthetics, result scatterplot.example, following graph shows relationship carat price:Looking graph clear weight diamond increases, price.","code":"\nggplot(data = diamonds) +\n  geom_point(mapping = aes(x = carat, y = price))"},{"path":"lab-4-data-summarizing.html","id":"plotting-three-variables","chapter":"4 Lab 4: Data summarizing","heading":"4.9.1 Plotting three variables","text":"order fully explore relationships multiple variables, sometimes useful visualize time. example, wanted see cut, price, carat related?One way might use facet_wrap() create separate scatter plot cut.common alternative add third aesthetic plot differentiate points way x y coordinates. aesthetics include color, size, shape, alpha points, linetype lines. See ggplot2 documentation Aesthetic specifications examples.following code plots scatter plot , color aesthetic mapped cut variable. reduce overplotting, alpha level reduced 0.3.","code":"\nggplot(data = diamonds) +\n  geom_point(mapping = aes(x = carat, y = price, color = cut), alpha = 0.1)"},{"path":"lab-4-data-summarizing.html","id":"assignment-2","chapter":"4 Lab 4: Data summarizing","heading":"4.10 Assignment","text":"First, create new R script named assignment.R. top script, add code load tidyverse package.assignment, work famous Edgar Anderson iris data set, gives measurements centimeters variables sepal length width petal length width, respectively, 50 flowers 3 species iris. species Iris setosa, versicolor, virginica.can print iris console see data set, basic data frame enhanced tibble, print user-friendly manner tibbles used . print nicely, turn tibble first.Add script:Note , iris now show Environment tab.","code":"\niris <- as_tibble(iris) # so it prints a little nicer"},{"path":"lab-4-data-summarizing.html","id":"questions-1","chapter":"4 Lab 4: Data summarizing","heading":"4.10.1 Questions","text":"Now use know previous labs, learned today’s lab, perform following data manipulation tasks. question, put comment like # question 1 line , can read script easily, follow answer blank line improve readability.answer, can simply print resulting table. need assign name. questions one part, e.g. need use multiple dplyr functions row. may use intermediate objects , encouraged try combining multiple operations pipe.Rename variable lower-case uses underscore _ instead period . name (recommended coding style tidyverse style guide)Rename variable lower-case uses underscore _ instead period . name (recommended coding style tidyverse style guide)Convert four numerical variables cm mm multiplying 10Convert four numerical variables cm mm multiplying 10Calculate sepal area petal area (area equal length multiplied width). Print table variables sepal area, petal area, species.Calculate sepal area petal area (area equal length multiplied width). Print table variables sepal area, petal area, species.Calculate following statistics entire dataset sepal length variable print resulting table:\nsample size\nmaximum value\nminimum value\nrange\nmedian\nfirst quartile (q1)\nthird quartile (q2)\ninter-quartile range (iqr)\nanswer tibble exactly one rowCalculate following statistics entire dataset sepal length variable print resulting table:sample sizemaximum valueminimum valuerangemedianfirst quartile (q1)third quartile (q2)inter-quartile range (iqr)answer tibble exactly one rowCalculate following statistics species petal width variable print resulting table:\nsample size\nmean\nstandard deviation\nvariance\nstandard error mean\napproximate 95% confidence interval\nCalculate following statistics species petal width variable print resulting table:sample sizemeanstandard deviationvariancestandard error meanapproximate 95% confidence intervalVisualize relationship petal width species using strip plot.Visualize relationship petal width species using strip plot.Starting previous graph, add mean 95% confidence interval speciesStarting previous graph, add mean 95% confidence interval speciesVisualize relationship petal length, petal width, species using scatter plot. Map two numerical variables x y axes map species color shape aesthetics.Visualize relationship petal length, petal width, species using scatter plot. Map two numerical variables x y axes map species color shape aesthetics.","code":""},{"path":"lab-4-data-summarizing.html","id":"submission-2","chapter":"4 Lab 4: Data summarizing","heading":"4.10.2 Submission","text":"completed questions listed , save files, commit changes, push GitHub.copy URL GitHub repository submit Assignment D2L.","code":""},{"path":"lab-4-data-summarizing.html","id":"submission-3","chapter":"4 Lab 4: Data summarizing","heading":"4.11 Submission","text":"completed questions listed , save files, commit changes, push GitHub.copy URL GitHub repository submit Assignment D2L.","code":""},{"path":"lab-4-data-summarizing.html","id":"further-reading-1","chapter":"4 Lab 4: Data summarizing","heading":"4.12 Further reading","text":"lab manual, R Data Science (R4DS), contains detailed instructions mutating, grouping, summarizing Chapter 5: Data transformation.need read chapter, certainly help solidify concepts introduced lab.want read chapter try examples R Script don’t forget install nycflights13 package described R4DS Section 1.4.4 Packages.","code":""},{"path":"laptop-setup.html","id":"laptop-setup","chapter":"5 Laptop Setup","heading":"5 Laptop Setup","text":"students use computers lab room complete labs. computers already necessary software installed, don’t anything get started.students may want work personal laptop desktop computer instead , addition , lab computers. case, two basic options:Install software machine, including R, RStudio, Git; see next three sections instructions.Install software machine, including R, RStudio, Git; see next three sections instructions.Use RStudio Cloud, online service essentially R, RStudio, Git, web browser. requirement internet connection. See RStudio Cloud instructions.Use RStudio Cloud, online service essentially R, RStudio, Git, web browser. requirement internet connection. See RStudio Cloud instructions.","code":""},{"path":"laptop-setup.html","id":"option-1-install-software","chapter":"5 Laptop Setup","heading":"5.1 Option 1: Install Software","text":"","code":""},{"path":"laptop-setup.html","id":"install-r","chapter":"5 Laptop Setup","heading":"5.1.1 Install R","text":"must install R install RStudio.Directions installing R:Go https://cran.rstudio.com/Download Install R, follow link operating system, Linux, (Mac) OS X, Windows.chose Download R (Mac) OS X:\nDownload binary file. link say something like “R-paste0(R.Version()$major, \".\", R.Version()$minor).pkg”, version number may different newer version released.\nOpen file Mac install R. prompted options installation, just select default options.\nchose Download R (Mac) OS X:Download binary file. link say something like “R-paste0(R.Version()$major, \".\", R.Version()$minor).pkg”, version number may different newer version released.Open file Mac install R. prompted options installation, just select default options.chose Download R Windows:\nClick link “base” “install first time”\nDownload installer. link say something like “Download R 4.0.3 Windows”, version number may different newer version released.\nOpen file Windows install R. prompted options installation, just select default options.\nchose Download R Windows:Click link “base” “install first time”Download installer. link say something like “Download R 4.0.3 Windows”, version number may different newer version released.Open file Windows install R. prompted options installation, just select default options.","code":""},{"path":"laptop-setup.html","id":"install-rstudio","chapter":"5 Laptop Setup","heading":"5.1.2 Install RStudio","text":"Make sure installed R try install RStudio.Directions installing RStudio:Go https://rstudio.com/products/rstudio/download/Scroll two thirds page. see heading says RStudio Desktop RStudio.Version()$version.Click big blue button says “DOWNLOAD STUDIO WINDOWS”","code":""},{"path":"laptop-setup.html","id":"install-git","chapter":"5 Laptop Setup","heading":"5.1.3 Install Git","text":"Quick instructions provided . detailed instructions, see Git documentation Chapter 1.5 Getting Started - Installing Git.","code":""},{"path":"laptop-setup.html","id":"installing-on-windows","chapter":"5 Laptop Setup","heading":"5.1.3.1 Installing on Windows","text":"Git webiste, go Download Windows click first link download latest 64-bit version Git Windows.","code":""},{"path":"laptop-setup.html","id":"installing-on-macos","chapter":"5 Laptop Setup","heading":"5.1.3.2 Installing on macOS","text":"See instructions Git documentation 1.5 Getting Started - Installing Git.","code":""},{"path":"laptop-setup.html","id":"options-2-use-rstudio-cloud","chapter":"5 Laptop Setup","heading":"5.2 Options 2: Use RStudio Cloud","text":"don’t want install software computer, option use RStudio Cloud https://rstudio.cloud/ web browser.create free account, get 30 hrs month free using default settings.","code":""},{"path":"laptop-setup.html","id":"introduce-yourself-to-git","chapter":"5 Laptop Setup","heading":"5.3 Introduce yourself to Git","text":"Whether install software use RStudio Cloud, need introduce Git can make commit. Quick instructions provided . detailed instructions, see Git documentation 1.6 Getting Started - First-Time Git Setup.First, open Git command line one following three ways (first easiest):Click Terminal tab RStudio (bottom left pane)Click Terminal tab RStudio (bottom left pane)Click Git tab RStudio (top right pane), click icon (blue gear), click Shell… open shell windowClick Git tab RStudio (top right pane), click icon (blue gear), click Shell… open shell windowIn Windows, run application Git CMD, example clicking icon Windows Start MenuIn Windows, run application Git CMD, example clicking icon Windows Start MenuIn macOS, open command lineIn macOS, open command lineSecond, run following two commands.replacing example name email address . username email address need match username email address , simply used Git record made particular commit.enter one command, press enter, enter second command, press enter.Note, enter $ sign beginning, just note command prompt.","code":"$ git config --global user.name \"Jane Doe\"\n$ git config --global user.email janedoe@example.com"},{"path":"project-options.html","id":"project-options","chapter":"7 Project Options","heading":"7 Project Options","text":"RStudio project consists , minimum, directory (aka folder) RStudio Project file. file name Project directory ends .RProj.One main purposes RProj file store Project Settings.can see Project Settings two ways:Go Tools > Project Options…Go Tools > Project Options…Files tab, click RProj fileIn Files tab, click RProj fileBoth methods cause dialog window pop showing project options.Project Options dialog","code":""},{"path":"project-options.html","id":"suggested-changes-to-default-settings","chapter":"7 Project Options","heading":"7.0.1 Suggested changes to default settings","text":"main thing change General settings avoid loading saving Project Workspace avoid saving History.Change project settings follows:Open Project Options dialogOpen Project Options dialogSelect General tab leftSelect General tab leftChange following settings (Default) \nRestore .RData workspace startup\nSave workspace .RData exit\nAlways save History (even saving .RData)\nChange following settings (Default) NoRestore .RData workspace startupRestore .RData workspace startupSave workspace .RData exitSave workspace .RData exitAlways save History (even saving .RData)Always save History (even saving .RData)Click OK buttonClick OK buttonNote: may also wish change Global Settings way. still important, however change project settings.Project version control (using Git), .RProj file now show modified. commit changes , repository also GitHub, push commit. Don’t forget give useful commit message like “Change project general settings default ”.","code":""},{"path":"code-sections.html","id":"code-sections","chapter":"8 Code Sections","heading":"8 Code Sections","text":"RStudio provides useful tool called code sections.code section special comment ends least four trailing dashes (-), pound signs (#), equal signs (=).Code sections three main uses:visual separate identify major sections code, making script readable.visual separate identify major sections code, making script readable.used create Document Outline. can jump directly code section clicking name Document Outline.used create Document Outline. can jump directly code section clicking name Document Outline.can jump directly section using Jump menu bottom left corner source pane.can jump directly section using Jump menu bottom left corner source pane.screenshot code sections action:Screenshot script three code sections showing Document OutlineAnd code script shown screenshot :","code":"\n## This script shows an example of using comments to create a document outline\n\n# load packages -----------------------------------------------------------\n\nlibrary(tidyverse)\n\n\n# read data ---------------------------------------------------------------\n\ndata <- read_xl(\"data.csv\")\n\n\n# plot data --------------------------------------------------------------\n\nggplot(data) +\n  geom_point(aes(x, y))"},{"path":"code-sections.html","id":"insert-a-code-section","chapter":"8 Code Sections","heading":"8.1 Insert a code section","text":"insert code section R script, one following:Use Insert Section… dialog Code menuUse keyboard shortcut Ctrl+Shift+R / Cmd+Shift+RAdd four dashes (-) pound signs (#) end commentFor readability, add blank line code section comment","code":""},{"path":"code-sections.html","id":"showhide-the-document-outline","chapter":"8 Code Sections","heading":"8.2 Show/hide the Document Outline","text":"document outline appears right side source paneTo toggle Document Outline , one following:Click Document Outline button right side source pane toolbar. looks like four offset horizontal linesUse keyboard Shortcut Ctrl-Shift+O / Cmd+Shift+O","code":""},{"path":"code-sections.html","id":"jump-to-a-code-section","chapter":"8 Code Sections","heading":"8.3 Jump to a code section","text":"can jump code section quickly one following:Show Document Outline click headingClick Jump menu select headingAs scripts become longer, code sections become useful.","code":""},{"path":"code-sections.html","id":"other-scripts","chapter":"8 Code Sections","heading":"8.4 Other scripts","text":"Code sections Document Outline can also used document types.example, show Document Outline R Markdown document, shows headingsExample R Markdown document showing Document Outline","code":""},{"path":"r-markdown-documents.html","id":"r-markdown-documents","chapter":"9 R Markdown documents","heading":"9 R Markdown documents","text":"R Markdown documents (.Rmd) special kind Markdown document lets insert chunks code. knitted, turned another file code chunk replaced nicely formatted code output.output code appears console run code, table figure. Code chunks can contain many types code, including R code.R Markdown documents can knitted variety file types including Markdown, (.md), web page (.html), PDF (.pdf), Microsoft Word (.docx), many .","code":""},{"path":"r-markdown-documents.html","id":"components-of-an-r-markdown-document","chapter":"9 R Markdown documents","heading":"9.1 Components of an R Markdown document","text":"three main components R Markdown document:YAML headerNarrative textChunks R code R run “knit” documentLet’s look component depth.","code":""},{"path":"r-markdown-documents.html","id":"yaml-header","chapter":"9 R Markdown documents","heading":"9.1.1 YAML header","text":"notice header information top, two sets three dashes, looks like :knit document, R use title page title put author date next line.Notice instead writing date text, R code. called inline R code R Markdown document. want insert something generated R text, can use kind code. Inline code start backtick letter r `r end another backtick `. another example inline code:One plus one 2When R knits appear asOne plus one 2","code":"---\ntitle: \"Lab 2 Assignment\"\nauthor: \"___\"\ndate: \"2022-02-04\"\noutput: github_document\n---"},{"path":"r-markdown-documents.html","id":"narrative-text","chapter":"9 R Markdown documents","heading":"9.1.2 Narrative text","text":"includes thinks like paragraphs text, headings, lists, quoted text, etc. Think body report.written Markdown language, simple way tell places like R GitHub look screen.can learn format text Markdown using resources:Go Help menu RStudio select Markdown Quick ReferenceBasic Syntax Markdown Guide websiteThe new version RStudio (version 1.4) handy WYSIWYG (see get) editor R Markdown allows write R Markdown documents like word processor like Microsoft Word. make use , download install newest version RStudio.","code":""},{"path":"r-markdown-documents.html","id":"code-chunks","chapter":"9 R Markdown documents","heading":"9.1.3 Code Chunks","text":"Code chunks bits R code executed knit document. resulting Markdown (type) document, code replaced output, usually consist text, tables figures.","code":""},{"path":"r-markdown-documents.html","id":"parts-of-a-code-chunk","chapter":"9 R Markdown documents","heading":"9.1.3.1 Parts of a code chunk","text":"code chunk looks like following:Always put blank line code chunk separate preceding text, otherwise knitr think just continuation previous content render correctly.three backticks beginning end, like , ``` indicate chunk begins ends.Inside curly braces {} first word indicated kind code expect next word name code chunk, may contain spaces. Names required, can useful can useful advanced knitting options debugging errors try knit document. don’t want give chunk name, just end curly brackts like : {r}Code goes beginning ending lines, example:Anything can write R script, can write R code chunk, including comments, seen .","code":"```{r chunk-name-with-no-spaces}\n\n``````{r print-x}\nx <- 1    # x gets a value of 1\nx         # print the value of x\n```"},{"path":"r-markdown-documents.html","id":"chunk-arguments","chapter":"9 R Markdown documents","heading":"9.1.3.2 Chunk arguments","text":"can modify way chunk gets turned code figures using chunk arguments.example, argument eval=FALSE prevent R evaluating code. output document, code shown output produced.add chunk argument, put comma language chunk name, one, name argument followed equal sign value argument. Spaces can added required. Many arguments require TRUE FALSE values, must caps.alternative way set arguments RStudio click gear icon right side code chunk.information, read Options knitr website.","code":"```{r show-code-only, eval=FALSE}\nx <- 1    # x gets a value of 1\nx         # print the value of x\n```"},{"path":"r-markdown-documents.html","id":"run-a-code-chunk","chapter":"9 R Markdown documents","heading":"9.1.3.3 Run a code chunk","text":"can run code R chunk two ways:Like R script: place cursor line highlight several lines use keyboard shortcut Ctrl+Enter / Cmd+ReturnLike R script: place cursor line highlight several lines use keyboard shortcut Ctrl+Enter / Cmd+ReturnRun entire chunk: Go Run menu source window toolbar select appropriate option like Run Current Chunk. also options running previous chunksRun entire chunk: Go Run menu source window toolbar select appropriate option like Run Current Chunk. also options running previous chunks","code":""},{"path":"r-markdown-documents.html","id":"knitting","chapter":"9 R Markdown documents","heading":"9.2 Knitting","text":"ready RStudio create final product R Markdown document, click Knit button source tab toolbar (looks like ball blue yarn needle).RStudio switch R Markdown tab bottom left pane. finds errors document, preview window pop showing approximately final product look like. Check make sure looks fine. Note links documents likely work stage.","code":""},{"path":"session-info.html","id":"session-info","chapter":"10 Session info","heading":"10 Session info","text":"Information R session can help users recreate analyses diagnose errors may encountering.session_info() function sessioninfo package provides information version R running, operating system, list packages loaded, version numbers.can share information R Markdown document code like :code , double colons tell R look session_info() function within sessioninfo package, need load sessioninfo package., however, need sessioninfo package installed machine. , can run code console just (put R Rmd scripts):","code":"```{r session-info}\nsessioninfo::session_info()\n```\ninstall.packages(\"sessioninfo\")"},{"path":"about-git-and-github.html","id":"about-git-and-github","chapter":"12 About Git and GitHub","heading":"12 About Git and GitHub","text":"","code":""},{"path":"about-git-and-github.html","id":"git","chapter":"12 About Git and GitHub","heading":"12.1 Git","text":"","code":""},{"path":"about-git-and-github.html","id":"what-is-git","chapter":"12 About Git and GitHub","heading":"12.1.1 What is Git?","text":"Git version control system, software tracks changes groups files. Git version control systems primarily used programmers collaboratively writing source code developing software. One reasons Git popular choice version control free open source.","code":""},{"path":"about-git-and-github.html","id":"why-use-git","chapter":"12 About Git and GitHub","heading":"12.1.2 Why use Git?","text":"Git popular within data science community way collaboratively managing components data science data, source code, figures, reports, dashboards.use version control data science, see wonderful article Jennifer Bryan “Excuse , moment talk version control?” article published American Satistician, open source version also appears PeerJ Preprints.","code":""},{"path":"about-git-and-github.html","id":"how-git-works","chapter":"12 About Git and GitHub","heading":"12.1.3 How Git works","text":"use git, must first install computer using. implementations require interact Git via command line interface (type commands), others sophisticated graphical user interface.tell Git track changes given directory (folder), Git calls repository. go data science business, add, modify, remove files repository. Every often, tell Git record changes repository. set changes called commit. snapshot, version, repository time commit version control systems get name.version control, can easily tell file modified, , reason. can also roll back changes change mind realize made mistake.complex ways use Git explore course. example, can multiple versions repository, called branches, exist time. common usage development branch tinker things production branch contains stable, working product. Think branches like alternate dimensions comic book universe edit independently marge back together choose.","code":""},{"path":"about-git-and-github.html","id":"github","chapter":"12 About Git and GitHub","heading":"12.2 GitHub","text":"","code":""},{"path":"about-git-and-github.html","id":"what-is-github","chapter":"12 About Git and GitHub","heading":"12.2.1 What is GitHub?","text":"GitHub online hosting service Git repositories. Git repository, can Git keep copy repository servers. GitHub -profit company, offer free accounts generally support working education, academia, non-profts.","code":""},{"path":"about-git-and-github.html","id":"why-use-github","chapter":"12 About Git and GitHub","heading":"12.2.2 Why use GitHub?","text":"possible use Git computer, powerful paired GitHub.common usage Git GitHub follows:create repository GitHub.create repository GitHub.copy (“clone” Git terminology) repository machine, either personal computer one computer lab classroom.copy (“clone” Git terminology) repository machine, either personal computer one computer lab classroom.write source code data-sciency things RStudio.write source code data-sciency things RStudio.commit changes local computer.commit changes local computer.copy (“push” Git terminology) changes GitHub.copy (“push” Git terminology) changes GitHub.way can work projects computer Git, R, RStudio installed .addition giving access Git repositories anywhere, GitHub allows multiple users access repositories. convenient way multiple people collaborate project. also allows communicate results data science projects wider audience creating reports dashboards.","code":""},{"path":"about-git-and-github.html","id":"github-classroom","chapter":"12 About Git and GitHub","heading":"12.2.3 GitHub Classroom","text":"GitHub Classroom tool offered GitHub educators. instructor can create repository quickly deploy students course. process creates copy repository student, instructor can access.","code":""},{"path":"github-notifications.html","id":"github-notifications","chapter":"13 GitHub Notifications","heading":"13 GitHub Notifications","text":"peers leave reviews GitHub instructor give feedback . important receive notifications events.","code":""},{"path":"github-notifications.html","id":"subscribing-to-notifications","chapter":"13 GitHub Notifications","heading":"13.1 Subscribing to notifications","text":"Make sure signed receive notifications email can see feedback respond timely manner.create issue, automatically signed notifications comments issue. Likewise, comment another user’s issue, automatically signed notifications comments issue.Caution: given assignment may receive dozen notifications:One peer review instructor review repositoryOne peer review instructor review repository reviewedWhen someone closes issue subscribed .unsubscribe comments given issue, view issue online click “Unsubscribe” notification email click “mute thread” link.","code":""},{"path":"github-notifications.html","id":"notification-methods","chapter":"13 GitHub Notifications","heading":"13.1.1 Notification methods","text":"can opt receive either email online notifications.Online notifications show notification area. can see new notifications blue dot alarm bell icon GitHub.Online notifications show notification area. can see new notifications blue dot alarm bell icon GitHub.Email notifications best option, don’t miss important message.Email notifications best option, don’t miss important message.receiving email notifications, want , go profile settings change appropriate setting.","code":""},{"path":"github-notifications.html","id":"notification-emails","chapter":"13 GitHub Notifications","heading":"13.2 Notification emails","text":"receive email notification, important read understand whether need respond .easiest way click link view issue online.may also want familiarize contents notification email can decide without viewing issue online whether need respond.visual guide notification emails:","code":""}]
